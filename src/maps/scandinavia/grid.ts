import { BLUE, PURPLE, RED, YELLOW } from "../../engine/state/good";
import { SpaceData } from "../../engine/state/space";
import {
  BOTTOM,
  BOTTOM_LEFT,
  BOTTOM_RIGHT,
  TOP,
  TOP_LEFT,
  TOP_RIGHT,
} from "../../engine/state/tile";
import { duplicate } from "../../utils/functions";
import {
  black,
  bridge,
  city,
  MOUNTAIN,
  PLAIN,
  RIVER,
  startsLowerGrid,
  town,
  UNPASSABLE,
  WATER,
  white,
} from "../factory";
import { startFrom } from "../tile_factory";
import { ScandinaviaMapData } from "./map_data";

function coastal<T>(data: T): T & { mapSpecific: ScandinaviaMapData } {
  return {
    ...data,
    mapSpecific: {
      isCoastal: true,
    },
  };
}

export const map = startsLowerGrid<SpaceData>([
  [
    UNPASSABLE,
    town("Söderhamn"),
    PLAIN,
    PLAIN,
    ...duplicate(3, MOUNTAIN),
    { ...MOUNTAIN, townName: "Lillehammer" },
    MOUNTAIN,
    MOUNTAIN,
  ],
  [
    UNPASSABLE,
    UNPASSABLE,
    PLAIN,
    PLAIN,
    { ...PLAIN, unpassableEdges: [TOP, TOP_LEFT] },
    ...duplicate(6, MOUNTAIN),
  ],
  [PLAIN, RIVER, PLAIN, RIVER, PLAIN, PLAIN, RIVER, ...duplicate(3, MOUNTAIN)],
  [
    PLAIN,
    city("Uppsala", BLUE, white(1)),
    ...duplicate(4, RIVER),
    PLAIN,
    coastal(city("Oslo", PURPLE, white(2))),
    PLAIN,
    MOUNTAIN,
    MOUNTAIN,
  ],
  [
    RIVER,
    RIVER,
    { ...PLAIN, unpassableEdges: [TOP_RIGHT, BOTTOM_RIGHT] },
    PLAIN,
    town("Karlstad"),
    PLAIN,
    PLAIN,
    WATER,
    coastal(town("Skien")),
    MOUNTAIN,
  ],
  [
    coastal(city("Stockholm", YELLOW, white(3))),
    ...duplicate(4, PLAIN),
    WATER,
    PLAIN,
    PLAIN,
    WATER,
    PLAIN,
    MOUNTAIN,
  ],
  [
    WATER,
    PLAIN,
    town("Norrköping"),
    WATER,
    PLAIN,
    WATER,
    PLAIN,
    WATER,
    WATER,
    PLAIN,
  ],
  [
    WATER,
    WATER,
    PLAIN,
    PLAIN,
    WATER,
    PLAIN,
    PLAIN,
    ...duplicate(3, WATER),
    coastal(city("Kristianstad", RED, white(4))),
    WATER,
  ],
  [
    WATER,
    ...duplicate(5, PLAIN),
    coastal(city("Göteborg", YELLOW, white(6))),
    bridge({
      tile: {
        ...startFrom(TOP).straightAcross(),
        claimableCost: [6],
      },
    }),
    coastal(city("Ålborg", PURPLE, white(5))),
    WATER,
    WATER,
  ],
  [
    coastal(town("Visby")),
    WATER,
    ...duplicate(5, PLAIN),
    WATER,
    PLAIN,
    PLAIN,
    WATER,
    WATER,
  ],
  [
    PLAIN,
    WATER,
    PLAIN,
    town("Växjö"),
    PLAIN,
    PLAIN,
    WATER,
    WATER,
    coastal(town("Viborg")),
    PLAIN,
    WATER,
  ],
  [
    WATER,
    WATER,
    coastal(town("Kalmar")),
    PLAIN,
    PLAIN,
    coastal(city("Helsingborg", PURPLE, black(1))),
    WATER,
    WATER,
    PLAIN,
    PLAIN,
    coastal(town("Esbjerg")),
    WATER,
  ],
  [
    ...duplicate(4, WATER),
    PLAIN,
    bridge({
      tile: {
        ...startFrom(TOP_LEFT).curveRight(),
        claimableCost: [6],
      },
    }),
    coastal(city("Kobenhavn", RED, black(2))),
    bridge({
      tile: {
        ...startFrom(TOP).curveLeft(),
        claimableCost: [6],
      },
    }),
    RIVER,
    PLAIN,
    WATER,
  ],
  [
    ...duplicate(4, WATER),
    PLAIN,
    coastal(town("Malmö")),
    WATER,
    { ...PLAIN, unpassableEdges: [BOTTOM] },
    coastal(city("Odense", YELLOW, black(3))),
    { ...PLAIN, unpassableEdges: [TOP] },
    coastal(town("Flensburg")),
    WATER,
  ],
  [
    ...duplicate(4, WATER),
    bridge({
      tile: {
        ...startFrom(BOTTOM_LEFT).straightAcross(),
      },
    }),
    WATER,
    PLAIN,
    WATER,
    WATER,
    PLAIN,
    WATER,
  ],
  [
    coastal(city("Gdansk", RED, black(4))),
    PLAIN,
    WATER,
    WATER,
    bridge({
      tile: {
        ...startFrom(BOTTOM_LEFT).curveRight(),
        claimableCost: [6],
      },
    }),
    RIVER,
    ...duplicate(3, WATER),
    coastal(town("Kiel")),
    RIVER,
    WATER,
  ],
  [
    ...duplicate(3, PLAIN),
    WATER,
    bridge({
      tile: {
        ...startFrom(TOP_LEFT).curveRight(),
      },
    }),
    coastal(town("Rostock")),
    PLAIN,
    coastal(town("Lübeck")),
    PLAIN,
    RIVER,
    WATER,
  ],
  [
    ...duplicate(4, PLAIN),
    coastal(city("Szczecin", PURPLE, black(6))),
    ...duplicate(4, PLAIN),
    city("Hamburg", BLUE, black(5)),
    PLAIN,
    WATER,
  ],
]);
